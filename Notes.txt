Let, Var & Const
-------------------

Variables decalred with "var" in javascript are fuction scoped.
Variables decalred with "let & const" are blocked scoped.
We cannot redefine const Variables.

Template String
------------------

Efficient way to build string by concatenation Variables


eg. without template string

let name = "Punya Prashun"; 
console.log("Hello" + name);

eg. with template string

let name = "Punya Prashun"
console.log(`Hello ${name}`);

Template String methods
--------------------------

startsWith() -> it takes a character as parameter and c     hecks the first character, if the passed character matches with first character then returns true otherwise returns false.

endsWith() -> it takes a character as parameter and checks the last character, if the passed character matches with last character then returns true otherwise returns false.

includes() -> it takes a string as parameter and checks if given string is present in the template string or not. if present then returns true otherwise return false.

repeat() -> it takes an integer as a parameter and repeat that template string that number of time and returns the resulant string.

Array Destructuring
-------------------

The Destructuring assigment syntax is a Javascript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.

It gives a way to access the elements without using indexes.

Swapping two numbers
---------------------

Method 1: Using Third variable
Method 2: without Using Third variable
    2.A: Using + and - operators
    2.B: Using * and / operators
    2.C: Using XOR(^) operators

Object Destructuring
-----------------------

The Destructuring assignment syntax is a javascript expression that makes it possible to unpack values from arrays or properties from objects into distinct variables

Fat Arrow Function
------------------

Arrow functions( Also called "Fat arrow functions") are undoubtly one of the more popular features of ES6. They introduced a new way of writing concise functions.

eg. const myfunc = () => {
    console.log("Arrow Function");
}
eg. const sum = (a,b) => a+b;

Default Parameters in ES6
-------------------------

Default function parameters allow named parameters to be initialized with default values if no value or undefined is passed

Rest Parameters
----------------

Rest parameter is an improved way to handle function parameter, allowing us to more easliy handle various input as paramters in a function. The rest parameter sysntax allows us to represent an indefintite number of arguments as an array.

Spread parameter
-----------------

Spread operator allows an iterable to expand in places where 0+ arguments are expected. It is mostly used in variable array where ther is more than 1 values are expected. it allows us the privilege to obtain a list of paramters from an array. Syntax of Spread operator is same as Rest Parameter but it workd completely opposite of it.